
@model DIYVCV.Models.ViewModels.ShowModule

@{
    ViewBag.Title = "Show";
}

<link href="~/Content/show-module.css" rel="stylesheet" type="text/css" />


<h2>@Model.module.ModuleName</h2>
<div class="navbar">
    <a class="navlink" href="/Module/DeleteConfirm/@Model.module.ModuleId">Delete Module</a></br>
    <a class="navlink" href="/Module/Update/@Model.module.ModuleId">Update Module</a>
</div>

@{
    //Use server rendering to determine an image
    string pic = "/Content/modules/default.png";
    string alt = "No Picture Was Provided.";
    if (Model.module.ModuleHasPic)
    {
        pic = "/Content/Modules/" + Model.module.ModuleId + "." + Model.module.PicExtension;
        alt = "Display Image for " + Model.module.ModuleName;
    }
}

<div style="overflow:hidden;">
    <div>

        <dl>
            <div class="imagecontainer featured">
                <img src="@pic" alt="@alt" />
            </div>

            <dt>
                @Html.DisplayNameFor(model => model.module.ModuleName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.module.ModuleName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.module.ModuleCategory)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.module.ModuleCategory)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.module.ModuleDescription)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.module.ModuleDescription)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.module.ModuleLink)
            </dt>

            <dd>
                <a href="@Html.DisplayFor(model => model.module.ModuleLink)">@Html.DisplayFor(model => model.module.ModuleLink)</a>
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.module.ModuleSchematic)
            </dt>

            <dd>
                <a href="@Html.DisplayFor(model => model.module.ModuleSchematic)">@Html.DisplayFor(model => model.module.ModuleSchematic)</a>
            </dd>
        </dl>

        <div>
            <div>
                <h4>Components:</h4>
                <table>
                    <tr>
                        <th>Value</th>
                        <th>Quantity</th>
                    </tr>
                    @foreach (var component in Model.component)
                    {
                        <tr>
                            <td>
                            @Html.ActionLink(
                            component.ComponentName + " " + component.ComponentValue,
                            "Show",
                            "Component",
                            new { id = component.ComponentId },
                            new { })
                            </td>
                            <td>
                            @Html.ActionLink(
                            component.ComponentQuantity,
                            "Show",
                            "Component",
                            new { id = component.ComponentId },
                            new { })
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>
